
#tomcat的端口号
server.port=10001

#指定服务注册中心的位置
eureka.client.serviceUrl.defaultZone=http://root:abcd1234!@localhost:9000/eureka/
eureka.instance.prefer-ip-address=true
#是否向注册中心注册自己
eureka.client.register-with-eureka=true
#是否检索服务
eureka.client.fetch-registry=true

#是否与服务发现组件进行结合，通过 serviceId(必须设置成大写) 转发到具体的服务实例。默认为false，设为true便开启通过服务中心的自动根据 serviceId 创建路由的功能。
#路由访问方式：http://Gateway_HOST:Gateway_PORT/大写的serviceId/**，其中微服务应用名默认大写访问。
spring.cloud.gateway.discovery.locator.enabled=true

#lb表示从注册中心获取服务
spring.cloud.gateway.routes[0].id=SERVICE-DEMO
spring.cloud.gateway.routes[0].uri=lb://SERVICE-DEMO
spring.cloud.gateway.routes[0].predicates[0].name=Path
spring.cloud.gateway.routes[0].predicates[0].args.pattern=/service-demo/**




#是否加密
config.encrypt=false
#自定义白名单
config.requestLikeNameKey=ajax_
#检查SQL注入攻击
config.filter=false
config.inputFilter=insert|select|delete|update|drop|create|and|exec|count|or|truncate|char|declare|join|unicode|nchar|substring|chr|mid|master
#检查特殊字符攻击
config.filterChar=false
config.inputFilterChar=<|>|\\u|/*|*/|,|;|$|&|%|'|"|(|)|+|\\|insert|select|delete|update|create|drop|0x0d|0x0a
config.requestNameKey=order|sort|operateGroupData|dataPermissionData|userData|_flag|selectNodes|addFileJsonStr|fileListJsonStr|delAttachIds|userjosn|userinfo|userIds|hoteljosn|_userIds|hotelinfo|hotelIds|_orgIds|orderRoomStr|hotelIdradio|hotelRoomIdradio|userstr|checkgroupstr|methodName|rightList|groupstr|hotelstr|orgName|_memberName|smsContent|ppinf|ppdig|sign|p